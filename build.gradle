plugins {
    id 'java'
}

group 'org.kor'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs 'external'
    }
}

dependencies {
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'com.squareup.okhttp3', name:'okhttp', version: '4.9.1'
    implementation name: 'uppaal'
    implementation name: 'model'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    manifest {
        attributes('Uppaal-Plugin': 'com.uppaal.cloud.ui.MainUI',
                'Class-Path': '../uppaal.jar')
    }
    archiveBaseName = "$project.name"
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    with jar
}

task deployLocal(type: Copy) {
    dependsOn fatJar
    from file("$buildDir/libs/$project.name-${project.version}.jar")
    into file("$System.env.UPPAAL_ROOT/plugins")
    rename { "UpaalCloud.jar" }
}

def file() {
    if (project.hasProperty("file")) {
        return "$file"
    }
    ''
}

task runUppaal(type: JavaExec, dependsOn: deployLocal) {
    main = "-jar"
    args "$System.env.UPPAAL_ROOT/uppaal.jar", file()
}